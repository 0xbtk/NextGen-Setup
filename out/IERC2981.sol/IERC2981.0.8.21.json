{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/openzeppelin/Interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/openzeppelin/Interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"src/openzeppelin/Interfaces/IERC2981.sol\":{\"keccak256\":\"0x07dd270792548d8d804b47adb8e5ffc6d84a19ab21b5a9fd6bf25dc52b43b65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f893180d7ea49f1838c9f62a08df6c7508678a02b631b89a7a487e6a739c68\",\"dweb:/ipfs/QmZLHXUqUJRUjsvQrndkzHumMLUQ45Jgw8xdLLjvKCFi6y\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/openzeppelin/Interfaces/IERC2981.sol": "IERC2981"
      },
      "libraries": {}
    },
    "sources": {
      "src/openzeppelin/Interfaces/IERC165.sol": {
        "keccak256": "0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1",
        "urls": [
          "bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3",
          "dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW"
        ],
        "license": "MIT"
      },
      "src/openzeppelin/Interfaces/IERC2981.sol": {
        "keccak256": "0x07dd270792548d8d804b47adb8e5ffc6d84a19ab21b5a9fd6bf25dc52b43b65e",
        "urls": [
          "bzz-raw://b5f893180d7ea49f1838c9f62a08df6c7508678a02b631b89a7a487e6a739c68",
          "dweb:/ipfs/QmZLHXUqUJRUjsvQrndkzHumMLUQ45Jgw8xdLLjvKCFi6y"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/openzeppelin/Interfaces/IERC2981.sol",
    "id": 47973,
    "exportedSymbols": {
      "IERC165": [
        47953
      ],
      "IERC2981": [
        47972
      ]
    },
    "nodeType": "SourceUnit",
    "src": "110:747:35",
    "nodes": [
      {
        "id": 47955,
        "nodeType": "PragmaDirective",
        "src": "110:24:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 47956,
        "nodeType": "ImportDirective",
        "src": "138:23:35",
        "nodes": [],
        "absolutePath": "src/openzeppelin/Interfaces/IERC165.sol",
        "file": "./IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47973,
        "sourceUnit": 47954,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47972,
        "nodeType": "ContractDefinition",
        "src": "431:426:35",
        "nodes": [
          {
            "id": 47971,
            "nodeType": "FunctionDefinition",
            "src": "708:146:35",
            "nodes": [],
            "documentation": {
              "id": 47960,
              "nodeType": "StructuredDocumentation",
              "src": "468:234:35",
              "text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
            },
            "functionSelector": "2a55205a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "royaltyInfo",
            "nameLocation": "717:11:35",
            "parameters": {
              "id": 47965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47962,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "747:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 47971,
                  "src": "739:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47964,
                  "mutability": "mutable",
                  "name": "salePrice",
                  "nameLocation": "773:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 47971,
                  "src": "765:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "728:61:35"
            },
            "returnParameters": {
              "id": 47970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47967,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "821:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 47971,
                  "src": "813:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47969,
                  "mutability": "mutable",
                  "name": "royaltyAmount",
                  "nameLocation": "839:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 47971,
                  "src": "831:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "812:41:35"
            },
            "scope": 47972,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47958,
              "name": "IERC165",
              "nameLocations": [
                "453:7:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47953,
              "src": "453:7:35"
            },
            "id": 47959,
            "nodeType": "InheritanceSpecifier",
            "src": "453:7:35"
          }
        ],
        "canonicalName": "IERC2981",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 47957,
          "nodeType": "StructuredDocumentation",
          "src": "165:264:35",
          "text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          47972,
          47953
        ],
        "name": "IERC2981",
        "nameLocation": "441:8:35",
        "scope": 47973,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 35
}